{"version":3,"file":"static/js/765.1848db58.chunk.js","mappings":"8SAEMA,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,iGACCC,EADD,gEACgEF,GADhE,SAEkBG,EAAAA,GAAAA,IAAUD,GAF5B,cAECE,EAFD,gBAGcA,EAASC,KAHvB,cAGCA,EAHD,gBAIiBA,EAAKC,QAJtB,cAICC,EAJD,yBAKEA,GALF,mEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,iFACQN,EAAAA,GAAAA,IAAA,4DAC0CH,EAD1C,kBAC2DS,IAFnE,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iFACQR,EAAAA,GAAAA,IAAA,6CAC2BQ,EAD3B,oBACyCX,IAFjD,0GAMA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iFACQR,EAAAA,GAAAA,IAAA,6CAC2BQ,EAD3B,4BACiDX,IAFzD,0GAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,iFACQR,EAAAA,GAAAA,IAAA,mDAE0BQ,EAF1B,4BAEgDX,IAHxD,0G,8IC5BMc,EAAYC,EAAAA,GAAAA,IAAH,4EAITC,EAAMD,EAAAA,GAAAA,IAAH,+CAIHE,EAAUF,EAAAA,GAAAA,IAAH,0D,SCPdG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,uMAWHK,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OAAO,SAACJ,EAAD,CAAYG,GAAIA,EAAhB,SAAqBC,GAC7B,ECyCD,EAnDqB,WAAO,IAAD,IACzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAQ7C,OANAC,EAAAA,EAAAA,YAAU,YACRtB,EAAAA,EAAAA,IAAagB,GACVO,MAAK,SAAA7B,GAAQ,OAAIqB,EAAUrB,EAASC,KAAvB,IACb6B,MAAMC,QAAQC,IAClB,GAAE,CAACV,KAGF,6BACE,SAACN,EAAD,CAAUC,GAAIO,EAAd,sBACA,UAACd,EAAD,YACE,SAACE,EAAD,CACEqB,IAAK,kCAAoCb,EAAOc,YAChDC,IAAKf,EAAOgB,MACZC,MAAO,OAGT,4BACE,0BACGjB,EAAOgB,MADV,KACmB,IAAIE,KAAKlB,EAAOmB,cAAcC,cADjD,QAGA,4BACE,sCACA,uBAAIpB,EAAOqB,YACX,oCACA,uBACGrB,EAAOsB,QACNtB,EAAOsB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,mBAKtD,UAACjC,EAAD,YACE,6CACA,SAAC,KAAD,CAAMI,GAAG,OAAOS,MAAO,CAAEC,KAAMH,GAA/B,UACE,mCAEF,SAAC,KAAD,CAAMP,GAAG,UAAUS,MAAO,CAAEC,KAAMH,GAAlC,UACE,yCAGJ,SAAC,KAAD,MAGL,C","sources":["components/api.js","pages/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a6f475cc84f4a9f427988f60780ac335';\n\nexport async function trendingFetch() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const filmArr = await data.results;\n  return filmArr;\n}\n\nexport async function searchFilm(quary) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${quary}`\n  );\n}\n\nexport async function getMovieById(id) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n}\n\nexport async function getReviews(id) {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n}\n\nexport async function getCast(id) {\n  return await axios.get(\n    `\n    https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  border-bottom: 1px solid gray;\n`;\nexport const Img = styled.img`\n  margin-right: 20px;\n`;\n\nexport const AddInfo = styled.div`\n  border-bottom: 1px solid gray;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { Container, Img, AddInfo } from './MovieDetails.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(response => setMovies(response.data))\n      .catch(console.log);\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Container>\n        <Img\n          src={'https://image.tmdb.org/t/p/w500' + movies.poster_path}\n          alt={movies.title}\n          width={250}\n        />\n\n        <div>\n          <h2>\n            {movies.title} ({new Date(movies.release_date).getFullYear()})\n          </h2>\n          <div>\n            <h3>Overview</h3>\n            <p>{movies.overview}</p>\n            <h3>Genres</h3>\n            <p>\n              {movies.genres &&\n                movies.genres.map(genre => genre.name).join(' , ')}\n            </p>\n          </div>\n        </div>\n      </Container>\n      <AddInfo>\n        <h3>Additional Info</h3>\n        <Link to=\"cast\" state={{ from: backLinkHref }}>\n          <p>Cast</p>\n        </Link>\n        <Link to=\"reviews\" state={{ from: backLinkHref }}>\n          <p>Reviews</p>\n        </Link>\n      </AddInfo>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","trendingFetch","url","axios","response","data","results","filmArr","searchFilm","quary","getMovieById","id","getReviews","getCast","Container","styled","Img","AddInfo","StyledLink","Link","BackLink","to","children","useState","movies","setMovies","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","then","catch","console","log","src","poster_path","alt","title","width","Date","release_date","getFullYear","overview","genres","map","genre","name","join"],"sourceRoot":""}